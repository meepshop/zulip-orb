description: "Send message to zulip"
parameters:
  stream:
    default: "test"
    description: |
      Zulip stream to post notifications to. Default to 'test'.
    type: string
  topic:
    default: "test topic"
    description: |
      Topic to use for messages. Default to 'test topic'.
    type: string
  content:
    default: "hello world"
    description: |
      Topic to use for messages. Default to 'hello world'.
    type: string
  event:
    default: "always"
    description: |
      In what event should this message send? Options: ["fail", "pass", "always"]. Default to 'always'.
    type: enum
    enum: ["fail", "pass", "always"]
  webhook:
    description: |
      zulip webhook api url.
    type: env_var_name
    default: ZULIP_WEBHOOK
  bot-email:
    description: |
      zulip bot email.
    type: env_var_name
    default: ZULIP_BOT_EMAIL
  bot-api-key:
    description: |
      zulip bot api key.
    type: env_var_name
    default: ZULIP_BOT_API_KEY
steps:
  - run:
      name: Zulip - Detecting job status (FAIL)
      command: |
        echo 'export BUILD_STATUS="fail"' >> $BASH_ENV
      when: on_fail
  - run:
      name: Zulip - Detecting job status (PASS)
      command: |
        echo 'export BUILD_STATUS="pass"' >> $BASH_ENV
      when: on_success
  - run:
      name: Notify zulip
      environment:
        ZULIP_PARAM_EVENT: "<<parameters.event>>"
      command: |
        if [ "$BUILD_STATUS" = "$ZULIP_PARAM_EVENT" ] || [ "$ZULIP_PARAM_EVENT" = "always" ]; then
          echo "Notifying zulip"
          curl -X POST ${<< parameters.webhook >>} \
            -u "${<< parameters.bot-email >>}:${<< parameters.bot-api-key >>}" \
            -d "type=stream" \
            -d "to=<< parameters.stream >>" \
            -d "topic=<< parameters.topic >>" \
            -d "content=<< parameters.content >>"
        else
          echo "This command is set to notify zulip on $ZULIP_PARAM_EVENT"
          echo "Current status: ${BUILD_STATUS}"
        fi
      shell: /bin/bash
      when: always
